"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var validator = require("@authenio/xsd-schema-validator");
var fs = require("fs");
var path = require("path");
var xsd = 'saml-schema-protocol-2.0.xsd';
var setSchemaDir = function (v) {
    var schemaDir;
    try {
        schemaDir = path.resolve(__dirname, './schemas');
        fs.accessSync(schemaDir, fs.constants.F_OK);
    }
    catch (err) {
        // for built-from git folder layout
        try {
            schemaDir = path.resolve(__dirname, '../schemas');
            fs.accessSync(schemaDir, fs.constants.F_OK);
        }
        catch (err) {
            //console.warn('Unable to specify schema directory', err);
            // QUESTION should this be swallowed?
            console.error(err);
            throw new Error('ERR_FAILED_FETCH_SCHEMA_FILE');
        }
    }
    v.cwd = schemaDir;
    v.debug = process.env.NODE_ENV === 'test';
    return v;
};
var mod = setSchemaDir(new validator());
exports.validate = function (xml) {
    return new Promise(function (resolve, reject) {
        mod.validateXML(xml, xsd, function (err, result) {
            if (err) {
                console.error('[ERROR] validateXML', err);
                return reject('ERR_EXCEPTION_VALIDATE_XML');
            }
            if (result.valid) {
                return resolve('SUCCESS_VALIDATE_XML');
            }
            return reject('ERR_INVALID_XML');
        });
    });
};
//# sourceMappingURL=index.js.map